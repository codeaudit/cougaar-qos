###############################################
# Metrics Message Serialization 
# Rule to insert order-dependent aspects from different groups:
# metrics, Robustness UC3 aspects, Security
#
# The Aspect load order is defined at 
#    https://cvs.ultralog.net/ultralog/AspectConfiguration

# aspectRecord=[className, loadOrder]
className=0
loadOrder=1

# Define serialization aspect in order to be loaded
# Measure bandwidth on wire (Robustness UC3)
bandwidthAspect = ["org.cougaar.robustness.dos.quo.BandwidthAspect",110] 

# Encrypt or Sign (Security)
messageProtect = ["org.cougaar.mts.std.MessageProtectionAspect",120]

# Compress (Robustness UC3)
compressingStreamsAspect =
  ["org.cougaar.robustness.dos.quo.CompressingStreamsAspect", 130]

# Measure length of message (metrics service)
statisticsAspect = ["org.cougaar.mts.std.StatisticsAspect",140]

#Ultralog Aug 2003 order
#[bandwidthAspect, messageProtect, compressingStreamsAspect,  statisticsAspect]
# Metrics service support only
ordered_aspects_to_add = [statisticsAspect] 


# Add all ordered aspects, at specfific insertion point
society.each_node_agent() do |node_agent|
  ordered_aspects_to_add.each { |comp| 
    node_agent.add_component do |c|
      c.classname = comp[className]
      if defined? c.order
	c.order = comp[loadOrder]
      end
      c.insertionpoint = "Node.AgentManager.Agent.MessageTransport.Aspect"
    end
  }
end
