#################################
# Basic Metric Service 
# Insertion point: All Nodes
# Does not add Gossip Service, RSS, or  Message Serialization components

# Basic Metrics Service Sensors and Servlet Plugins
# Sensor basic metrics and servlets to display them
# insertion point: NodeAgent
agentStatusRatePlugin = "org.cougaar.core.qos.metrics.AgentStatusRatePlugin"

# These next two are order-important; must load the sensor plugin with low priority
agentLoadSensorPlugin = "org.cougaar.core.thread.AgentLoadSensorPlugin" 
agentLoadRatePlugin = "org.cougaar.core.thread.AgentLoadRatePlugin"

metricsServletPlugin = "org.cougaar.core.qos.metrics.MetricsServletPlugin" 

metrics_service_plugins_to_add = [agentStatusRatePlugin, metricsServletPlugin, agentLoadSensorPlugin]

# Add all metrics service plugins
society.each_node_agent() do |node_agent|
   node_agent.add_component(agentLoadRatePlugin) do |c|
    c.priority = 'LOW';
   end
   node_agent.add_components(metrics_service_plugins_to_add)
end


#  Metrics Service Components
# Enables a dynamic Metrics service which support mobility and QuO
# insertion point: Node.AgentManager.Agent.MetricsServices.Component
agentHostUpdaterComponent = "org.cougaar.core.qos.rss.AgentHostUpdaterComponent"
syscondFactory = "org.cougaar.lib.mquo.SyscondFactory"

metrics_service_components_to_add = [agentHostUpdaterComponent, syscondFactory]

# Add all metrics service components on all nodes, different insertion point 
society.each_node_agent() do |node_agent|
   metrics_service_components_to_add.each { |comp|
     node_agent.add_component do |c|
     c.classname = comp
     c.insertionpoint = "Node.AgentManager.Agent.MetricsServices.Component"
     end
    }
end
