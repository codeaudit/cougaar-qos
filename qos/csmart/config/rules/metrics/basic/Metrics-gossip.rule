# [Metrics Service Gossip Components]
# Gossip is used to transport remote measurements to the local node,
# by piggybacking them on normal message traffic. 
# Inserts aspects and components into all Nodes

# Message Transport Asspects
# Used to manage requests for metrics and transfer of the messages themselves
#
# The Aspect load order is defined at 
#    https://cvs.ultralog.net/ultralog/AspectConfiguration
#
# aspectRecord=[className, loadOrder]
className=0
loadOrder=1

gossipAspect = ["org.cougaar.core.qos.gossip.GossipAspect",230]
statisticsService = ["org.cougaar.core.qos.gossip.GossipStatisticsServiceAspect",240]
simpleGossipQualifier = ["org.cougaar.core.qos.gossip.SimpleGossipQualifierComponent",250]

gossip_components_to_add = [gossipAspect, statisticsService, simpleGossipQualifier]

# RSS components
gossipfeed = "org.cougaar.core.qos.gossip.GossipFeedComponent"

# Add Gossip Components to a MTS insertion point
society.each_node_agent() do |node_agent|
  gossip_components_to_add.each { |comp|
    node_agent.add_component do |c|
      c.classname = comp[className]
      if defined? c.order
	c.order = comp[loadOrder]
      end
      c.insertionpoint = "Node.AgentManager.Agent.MessageTransport.Aspect"
    end
  }


  # Metrics Service Components
  # Adds a data feed for importing the requests from the 
  node_agent.add_component do |c|
    c.classname = gossipfeed
    c.insertionpoint = "Node.AgentManager.Agent.MetricsServices.Component"
  end


  # Gossip Monitoring servlet
  #  servlet = org.cougaar.core.qos.gossip.GossipServlet
  node_agent.add_component("org.cougaar.core.qos.gossip.GossipStatisticsPlugin")

end

