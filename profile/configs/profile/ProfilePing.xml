<?xml version='1.0'?>

<host name='localhost'>

  <!-- select the nameserver -->
  <vm_parameter>-Dorg.cougaar.name.server=NodeA@localhost:8888</vm_parameter>

  <!-- add our directory to the file search path -->
  <vm_parameter>
    -Dorg.cougaar.config.path=$COUGAAR_INSTALL_PATH/profile/configs/profile\;$COUGAAR_INSTALL_PATH/configs/common
  </vm_parameter>

  <!-- disable +/- stdout -->
  <vm_parameter>-Dorg.cougaar.core.agent.quiet=true</vm_parameter>

  <!-- disable "agent: " logging prefix -->
  <vm_parameter>-Dorg.cougaar.core.logging.addAgentPrefix=false</vm_parameter>

  <!-- fast startup -->
  <vm_parameter>-Dorg.cougaar.core.wp.resolver.rmi.minLookup=500</vm_parameter>
  <vm_parameter>-Dorg.cougaar.core.wp.resolver.rmi.maxLookup=2000</vm_parameter>
  <vm_parameter>-Dorg.cougaar.core.wp.server.failTTD=1000</vm_parameter>
  <vm_parameter>-Dorg.cougaar.core.mts.destq.retry.maxTimeout=30000</vm_parameter>

  <!-- log agent startup -->
  <vm_parameter>-Dorg.cougaar.core.logging.log4j.category.org.cougaar.core.agent.BeginLogger=INFO</vm_parameter>

  <!-- disable unnecessary domains -->
  <vm_parameter>-Dorg.cougaar.core.domain.config.enable=false</vm_parameter>
  <vm_parameter>-Dorg.cougaar.core.load.planning=false</vm_parameter>
  <vm_parameter>-Dorg.cougaar.core.load.community=false</vm_parameter>

  <node name='NodeA'>
    <!-- required profiler-management component -->
    <component
      class='org.cougaar.core.qos.profile.ProfilerCoordinator'
      priority='HIGH'
      insertionpoint='Node.AgentManager.Agent.Component'>
      <!-- once every ten seconds -->
      <argument>period=10000</argument>
    </component>

    <!-- mts components -->
    <component
      class='org.cougaar.mts.std.StatisticsAspect'
      insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'/>
    <component
      class='org.cougaar.mts.tmatrix.AgentFlowAspect'
      insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'/>

    <!-- optional mts-internal profilers -->
    <component
      class='org.cougaar.core.qos.profile.LocalTraffic'
      insertionpoint='Node.AgentManager.Agent.MessageTransport.Component'/>
    <component
      class='org.cougaar.core.qos.profile.RemoteTraffic'
      insertionpoint='Node.AgentManager.Agent.MessageTransport.Component'/>
    <component
      class='org.cougaar.core.qos.profile.Throughput'
      insertionpoint='Node.AgentManager.Agent.MessageTransport.Component'/>
    <component
      class='org.cougaar.core.qos.profile.TrafficMatrix'
      insertionpoint='Node.AgentManager.Agent.MessageTransport.Component'/>

    <!-- metrics components and plugins -->
    <component
      class='org.cougaar.core.qos.rss.AgentHostUpdaterComponent'
      insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'/>
    <component
      class='org.cougaar.lib.mquo.SyscondFactory'
      insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'/>
    <component
      class='org.cougaar.core.qos.rss.ConfigFinderDataFeedComponent'
      insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      <argument>name=sites</argument>
      <argument>url=cougaarconfig:TIC-Sites.conf</argument>
    </component>
    <component
      class='org.cougaar.core.qos.rss.ConfigFinderDataFeedComponent'
      insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      <argument>name=hosts</argument>
      <argument>url=cougaarconfig:TIC-Hosts.conf</argument>
    </component>

    <component
      class='org.cougaar.mts.tmatrix.AgentFlowRatePlugin'/>
    <component
      class='org.cougaar.core.qos.metrics.AgentStatusRatePlugin'/>
    <component
      class='org.cougaar.core.thread.AgentLoadSensorPlugin'/>
    <component
      class='org.cougaar.core.thread.AgentLoadRatePlugin'/>
    <component
      class='org.cougaar.mts.std.StatisticsPlugin'/>

    <!-- optional profilers -->
    <component
      class='org.cougaar.core.qos.profile.BlackboardSize'/>
    <component
      class='org.cougaar.core.qos.profile.JavaHeapSize'/>
    <component
      class='org.cougaar.core.qos.profile.Load'/>
    <component
      class='org.cougaar.core.qos.profile.NodeTraffic'/>
    <component
      class='org.cougaar.core.qos.profile.PersistSize'/>
    <component
      class='org.cougaar.core.qos.profile.ProcLoadAvg'/>
    <component
      class='org.cougaar.core.qos.profile.ProcNetDev'/>
    <component
      class='org.cougaar.core.qos.profile.ProcMemInfo'/>
    <component
      class='org.cougaar.core.qos.profile.ProcStat'/>
    <component
      class='org.cougaar.core.qos.profile.ProcStatus'/>
    <component
      class='org.cougaar.core.qos.profile.Resources'/>
    <component
      class='org.cougaar.core.qos.profile.VmStat'/>

    <!-- optional, required if above BlackboardSize is loaded -->
    <component
      class='org.cougaar.core.qos.profile.BlackboardSizeInAgent'/>

    <agent name='AgentA'>
      <!-- optional, required if above PersistSize is loaded -->
      <component 
        class='org.cougaar.core.qos.metrics.PersistenceAdapterPlugin'/>
      <!-- optional, required if above BlackboardSize is loaded -->
      <component
        class='org.cougaar.core.qos.profile.BlackboardSizeInAgent'/>

      <!-- ping plugins -->
      <component
        class='org.cougaar.ping.PingTimerPlugin'>
        <argument>wakeMillis=1000</argument>
      </component>
      <component
        class='org.cougaar.ping.PingAdderPlugin'>
        <argument>target=AgentB</argument>
        <argument>delayMillis=0</argument>
        <argument>eventMillis=10000</argument>
        <argument>ignoreRollback=true</argument>
      </component>
    </agent>
  </node>
  <node name='NodeB'>
    <!-- 
    This can be an exact copy of the above NodeA components.

    For contrast, here we include the minimal StatisticsAspect
    component, which is necessary to support communication with
    NodeA (otherwise I/O exceptions are thrown).
    -->
    <component
      class='org.cougaar.mts.std.StatisticsAspect'
      insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'/>

    <agent name='AgentB' >
      <!-- ping target, no plugins required -->
    </agent>
  </node>
</host>
