/* -*- JAVA -*- */

// ****** Code generated by the QuO codegenerator 3.0.9 ******
// QuO and the QuO codegenerator have been developed by 
// BBN Technologies.

// Information about QuO is available at:
// http://www.dist-systems.bbn.com/tech/QuO


package org.cougaar.lib.quo ;

import java.rmi.*;
import com.bbn.quo.rmi.*;
import com.bbn.quo.*;

class MTInstrumentedInstrumentedServerDelegate_object extends java.rmi.server.UnicastRemoteObject  implements org.cougaar.lib.mquo.MTInstrumented {

  //These are instance variables declared in ASL.
  protected com.bbn.quo.qosket.instrumentation.ServerInstrumentationDelegateQosket qk;

  void set_qk(com.bbn.quo.qosket.instrumentation.ServerInstrumentationDelegateQosket arg1){
    qk = arg1;
  }
  protected org.cougaar.lib.mquo.MTInstrumented quo_remoteObj;
  void set_remoteObj(org.cougaar.lib.mquo.MTInstrumented arg1){
    quo_remoteObj = arg1;
  }
  org.cougaar.lib.mquo.MTInstrumented get_remoteObj(){
    return(quo_remoteObj);
  }
  protected com.bbn.quo.rmi.Contract quo_InstrumentedServer;
  void set_contract_InstrumentedServer(com.bbn.quo.rmi.Contract arg1){
    quo_InstrumentedServer = arg1;
  }
  com.bbn.quo.rmi.Contract get_contract_InstrumentedServer() {
    return quo_InstrumentedServer;
  }
  void set_qosket(com.bbn.quo.qosket.instrumentation.ServerInstrumentationDelegateQosket qs){
    qk = qs;
  }

  // These are the regions in the contract
  final static int INSTRUMENTEDSERVER__INSTRUMENTATIONON = 0;

  public MTInstrumentedInstrumentedServerDelegate_object() throws RemoteException {} 

  public MTInstrumentedInstrumentedServerDelegate_object(
       int port, 
       java.rmi.server.RMISocketFactory server_sockfac,
       java.rmi.server.RMISocketFactory client_sockfac 
      ) throws RemoteException {
      super(port, server_sockfac, client_sockfac); 
  }

  public org.cougaar.core.mts.MessageAddress getMessageAddress() throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    org.cougaar.core.mts.MessageAddress addr;
    com.bbn.quo.corba.Association[] signal =
        new com.bbn.quo.corba.Association[0];
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for inplaceof premethodcontracteval
    // Adaptive code for inplaceof methodcall
    
		    addr = ((org.cougaar.core.mts.MT) qk.getServer()).getMessageAddress();
		
    return(addr);
  }
  public com.bbn.quo.instr.corba.Trace_rec rerouteMessage(com.bbn.quo.instr.corba.Trace_rec record, org.cougaar.core.mts.Message m) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association [] sig;
    int length;
    com.bbn.quo.instr.corba.Trace_rec rec;
    com.bbn.quo.instr.corba.Trace_rec result;
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for after methodentry
    length = 0;
    rec = record;
    // Adaptive code for before premethodcontracteval
    qk.serverRequestIn1(rec, length);
    sig = qk.createSignalAssociations(rec);
    quo_sig1 = new com.bbn.quo.corba.SignalEvent("premethod", sig);
    quo_curRegs_InstrumentedServer = quo_InstrumentedServer.signalAndEvalAndGetCurrentRegion(quo_sig1);
    // Adaptive code for before methodcall
    qk.serverRequestOut1(rec, length);
    // Adaptive code for inplaceof methodcall
    
		    ((org.cougaar.core.mts.MT) qk.getServer()).rerouteMessage(m);
		
    // Adaptive code for after methodcall
    qk.serverReplyIn1(rec, length);
    // Adaptive code for before postmethodcontracteval
    sig = qk.createSignalAssociations(rec);
    quo_sig2 = 	new com.bbn.quo.corba.SignalEvent("postmethod", sig);
      quo_curRegs_InstrumentedServer = quo_InstrumentedServer.signalAndEvalAndGetCurrentRegion(quo_sig2);
    // Adaptive code for before methodreturn
    qk.serverReplyOut1(rec, length);
    // Adaptive code for before methodreturn
    result = rec;
    return(result);
  }
  public com.bbn.quo.instr.corba.Trace_rec receiveCompressedMessage(com.bbn.quo.instr.corba.Trace_rec record, org.cougaar.lib.mquo.Zippy compressedMessage) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association [] sig;
    int length;
    com.bbn.quo.instr.corba.Trace_rec rec;
    com.bbn.quo.instr.corba.Trace_rec result;
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for after methodentry
    length = 0;
    rec = record;
    // Adaptive code for before premethodcontracteval
    qk.serverRequestIn1(rec, length);
    sig = qk.createSignalAssociations(rec);
    quo_sig1 = new com.bbn.quo.corba.SignalEvent("premethod", sig);
    quo_curRegs_InstrumentedServer = quo_InstrumentedServer.signalAndEvalAndGetCurrentRegion(quo_sig1);
    // Adaptive code for before methodcall
    qk.serverRequestOut1(rec, length);
    // Adaptive code for inplaceof methodcall
    
		    org.cougaar.core.mts.Message msg = 
			(org.cougaar.core.mts.Message) compressedMessage.getData();
		    ((org.cougaar.core.mts.MT) qk.getServer()).rerouteMessage(msg);
		
    // Adaptive code for after methodcall
    qk.serverReplyIn1(rec, length);
    // Adaptive code for before postmethodcontracteval
    sig = qk.createSignalAssociations(rec);
    quo_sig2 = 	new com.bbn.quo.corba.SignalEvent("postmethod", sig);
      quo_curRegs_InstrumentedServer = quo_InstrumentedServer.signalAndEvalAndGetCurrentRegion(quo_sig2);
    // Adaptive code for before methodreturn
    qk.serverReplyOut1(rec, length);
    // Adaptive code for before methodreturn
    result = rec;
    return(result);
  }
  public void receiveOnlyCompressedMessage(org.cougaar.lib.mquo.Zippy compressedMessage) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association[] sig =
        new com.bbn.quo.corba.Association[0];
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for inplaceof premethodcontracteval
    // Adaptive code for inplaceof methodcall
    
		    org.cougaar.core.mts.Message msg = 
			(org.cougaar.core.mts.Message) compressedMessage.getData();
		    ((org.cougaar.core.mts.MT) qk.getServer()).rerouteMessage(msg);
		
    return;
  }
  public void receiveOnlyCompressedBytes(byte [] compressedMessage) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association[] sig =
        new com.bbn.quo.corba.Association[0];
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for inplaceof premethodcontracteval
    // Adaptive code for inplaceof methodcall
    
		    org.cougaar.core.mts.Message msg = 
		      (org.cougaar.core.mts.Message) 
		      org.cougaar.lib.mquo.Zippy.unzip(compressedMessage);
		    ((org.cougaar.core.mts.MT) 
		     qk.getServer()).rerouteMessage(msg);
		
    return;
  }
  public void receiveOnlyBytes(byte [] message) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association[] sig =
        new com.bbn.quo.corba.Association[0];
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for inplaceof premethodcontracteval
    // Adaptive code for inplaceof methodcall
    
		org.cougaar.core.mts.Message msg = 
		    (org.cougaar.core.mts.Message) 
		  org.cougaar.lib.mquo.Zippy.fromByteArray(message);
		((org.cougaar.core.mts.MT) 
		 qk.getServer()).rerouteMessage(msg);
	    
    return;
  }
  public void ignoreCompressedMessage(org.cougaar.lib.mquo.Zippy compressedMessage) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association[] sig =
        new com.bbn.quo.corba.Association[0];
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for inplaceof premethodcontracteval
    // Adaptive code for inplaceof methodcall
    return;
  }
  public void ignoreCompressedBytes(byte [] compressedMessage) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association[] sig =
        new com.bbn.quo.corba.Association[0];
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for inplaceof premethodcontracteval
    // Adaptive code for inplaceof methodcall
    org.cougaar.lib.mquo.Zippy.unzip(compressedMessage);
    return;
  }
  public void ignoreBytes(byte [] message) throws RemoteException   {
    // Default declarations and setup of quo introduced variables local to method:
    int[] quo_curRegs_InstrumentedServer;
    com.bbn.quo.corba.Association[] sig =
        new com.bbn.quo.corba.Association[0];
    com.bbn.quo.corba.SignalEvent quo_sig1;
    com.bbn.quo.corba.SignalEvent quo_sig2;

    // Adaptive code for inplaceof premethodcontracteval
    // Adaptive code for inplaceof methodcall
    org.cougaar.lib.mquo.Zippy.fromByteArray(message);
    return;
  }
};

