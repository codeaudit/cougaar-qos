<?xml version='1.0'?>

<!--
Simple example of core's ping support with two nodes which can be 
run on different hosts. 

The -Dorg.cougaar.name.server vm_parameter must be set to 
the NodeA@NodeAHost:8888 for both nodes.

See "<agent name='AgentA'>..</agent>" for notes on how to configure
the pings.  The provided configuration will send an endless series of
pings from AgentA to AgentB, one every second.  The "PingAdder"
component arguments can be modified increase the number of pings or
change their frequency.

See the package-level javadocs in
  core/src/org/cougaar/ping/package.html
for additional usage and testing notes.
-->

<society name='MiniPing-2nodes'
  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
  xsi:noNamespaceSchemaLocation='http://www.cougaar.org/2003/society.xsd'>
  <host name='localhost'>
    <node name='NodeA'>

      <!-- 
      XMLNode command-line options, ignored for now (bug 3466)

      You may need to copies these "vm_parameter" values into your
      "XMLNode.bat/Node" scripts.
      -->
      <class>org.cougaar.bootstrap.Bootstrapper</class>
      <prog_parameter>org.cougaar.core.node.Node</prog_parameter>
      <!-- make sure these are correct! -->
      <vm_parameter>-Dorg.cougaar.node.name=NodeA</vm_parameter>
      <vm_parameter>-Dorg.cougaar.society.file=MiniPing-2nodes.xml</vm_parameter>

      <vm_parameter>-Dorg.cougaar.name.server=NodeA@localhost:8888</vm_parameter>
      <!-- enable ping logging using system properties instead of "loggingConfig.conf" -->
      <!--
      <vm_parameter>-Dorg.cougaar.core.logging.config.filename=loggingConfig.conf</vm_parameter>
      -->
      <vm_parameter>-Dorg.cougaar.core.logging.log4j.category.EVENT.org.cougaar.ping=DEBUG</vm_parameter>

      <vm_parameter>-Dorg.cougaar.core.logging.log4j.category.org.cougaar.ping=INFO</vm_parameter>
      <!--
      <vm_parameter>-Dorg.cougaar.core.agent.showtraffic=false</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.agent.quiet=true</vm_parameter>
      -->

      <!-- disable planning and communities (bug 2522) -->
      <vm_parameter>-Dorg.cougaar.core.load.planning=false</vm_parameter>
      <vm_parameter>-Dorg.cougaar.planning.ldm.lps.ComplainingLP.level=0</vm_parameter>
      <vm_parameter>-Dorg.cougaar.society.xsl.param.planning=false</vm_parameter>
      <vm_parameter>-Dorg.cougaar.society.xsl.param.communities=false</vm_parameter>

      <!-- Java VM Parameters -->
      <vm_parameter>-XX:ThreadStackSize=256</vm_parameter>
      <vm_parameter>-Xms16m</vm_parameter>
      <vm_parameter>-Xmx128m</vm_parameter>

      <!-- Cougaar Install Path environment-->
      <vm_parameter>-Dorg.cougaar.core.node.InitializationComponent=XML</vm_parameter>
      <!-- config path; Note this directory is part of config-->
      <vm_parameter>-Dorg.cougaar.config.path=$COUGAAR_INSTALL_PATH/ping/configs/ping\;$COUGAAR_INSTALL_PATH/configs/common</vm_parameter>
      <vm_parameter>-Dorg.cougaar.install.path=$COUGAAR_INSTALL_PATH</vm_parameter>
      <vm_parameter>-Dorg.cougaar.workspace=$COUGAAR_INSTALL_PATH/workspace</vm_parameter>
      <vm_parameter>-Dorg.cougaar.system.path=$COUGAAR_INSTALL_PATH/sys</vm_parameter>
      <vm_parameter>-Djava.class.path=$COUGAAR_INSTALL_PATH/lib/bootstrap.jar</vm_parameter>
      <vm_parameter>-Xbootclasspath/p:$COUGAAR_INSTALL_PATH/lib/javaiopatch.jar</vm_parameter>
 
     <!--optional developement jars -->
      <!--
	  <vm_parameter>-Dorg.cougaar.class.path=$COUGAAR_SRC_PATH/core/newcore.jar</vm_parameter>
      -->

      <!-- optional frequent persistence -->
      <!--
      <vm_parameter>-Dorg.cougaar.core.persistence.enable=true</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.persistence.lazyInterval=15000</vm_parameter>
      -->
      <!-- Fast Name Service Startup-->
      <vm_parameter>-Dorg.cougaar.core.wp.server.successTTD=90000</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.wp.server.failTTD=1000</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.wp.resolver.rmi.minLookup=500</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.wp.resolver.rmi.maxLookup=2000</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.mts.destq.retry.initialTimeout=250</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.mts.destq.retry.maxTimeout=666</vm_parameter>

      <!-- Node A has the Name Service -->
       <component
          name='org.cougaar.core.wp.server.Server()'
          class='org.cougaar.core.wp.server.Server'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.WPServer'>
        </component>

      <!-- optional Node-level agent mobility support -->

      <component
        name='mobility'
        class='org.cougaar.core.mobility.ldm.MobilityDomain'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.DomainManager.Domain'>
        <argument>mobility</argument>
      </component>
      <component
        name='org.cougaar.core.mobility.service.RootMobilityPlugin()'
        class='org.cougaar.core.mobility.service.RootMobilityPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'/>


      <!-- optional servlets -->
      <component
        name='org.cougaar.core.wp.WhitePagesServlet(/wp)'
        class='org.cougaar.core.wp.WhitePagesServlet'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
        <argument>/wp</argument>
      </component>
      <component
        name='org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet, /tasks)'
        class='org.cougaar.core.servlet.SimpleServletComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
        <argument>org.cougaar.planning.servlet.PlanViewServlet</argument>
        <argument>/tasks</argument>
      </component>

      <!-- optional  Metrics Service components -->
      <!-- Metrics Sensors -->
      <component
        name='org.cougaar.mts.std.StatisticsAspect()'
        class='org.cougaar.mts.std.StatisticsAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          140
        </order>
      </component>
      <component
        name='org.cougaar.mts.std.AgentFlowAspect()'
        class='org.cougaar.mts.std.AgentFlowAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          210
        </order>
      </component>
      <component
        name='org.cougaar.mts.std.StatisticsPlugin'
        class='org.cougaar.mts.std.StatisticsPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.metrics.AgentFlowRatePlugin'
        class='org.cougaar.core.qos.metrics.AgentFlowRatePlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.thread.AgentLoadRatePlugin'
        class='org.cougaar.core.thread.AgentLoadRatePlugin'
        priority='LOW'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.metrics.AgentStatusRatePlugin'
        class='org.cougaar.core.qos.metrics.AgentStatusRatePlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.metrics.MetricsServletPlugin'
        class='org.cougaar.core.qos.metrics.MetricsServletPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.thread.AgentLoadSensorPlugin'
        class='org.cougaar.core.thread.AgentLoadSensorPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.GossipAspect()'
        class='org.cougaar.core.qos.gossip.GossipAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          230
        </order>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.GossipStatisticsServiceAspect()'
        class='org.cougaar.core.qos.gossip.GossipStatisticsServiceAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          240
        </order>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.SimpleGossipQualifierComponent()'
        class='org.cougaar.core.qos.gossip.SimpleGossipQualifierComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          250
        </order>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.GossipStatisticsPlugin'
        class='org.cougaar.core.qos.gossip.GossipStatisticsPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <!-- MTS Assertions -->
      <component
        name='org.cougaar.mts.std.DeliveryVerificationAspect(info-time=9,warn-time=99)'
        class='org.cougaar.mts.std.DeliveryVerificationAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          220
        </order>
        <argument>
          info-time=9
        </argument>
        <argument>
          warn-time=99
        </argument>
      </component>
      <component
        name='org.cougaar.core.thread.TopPlugin'
        class='org.cougaar.core.thread.TopPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <!-- Metric Service Internals  -->
      <component
        name='org.cougaar.core.qos.rss.AgentHostUpdaterComponent()'
        class='org.cougaar.core.qos.rss.AgentHostUpdaterComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      </component>
      <component
        name='org.cougaar.lib.mquo.SyscondFactory()'
        class='org.cougaar.lib.mquo.SyscondFactory'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      </component>
      <!-- optional Metric Service Feeds  -->
      <component
        name='org.cougaar.core.qos.gossip.GossipFeedComponent()'
        class='org.cougaar.core.qos.gossip.GossipFeedComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      </component>
      <component
        name='org.cougaar.core.qos.rss.ConfigFinderDataFeedComponent(name=sites,url=cougaarconfig:RSS-Sites.conf)'
        class='org.cougaar.core.qos.rss.ConfigFinderDataFeedComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
        <argument>
          name=sites
        </argument>
        <argument>
          url=cougaarconfig:RSS-Sites.conf
        </argument>
      </component>

      <!-- End of Metrics Service components -->

      <!-- "AgentA", which sends pings to "AgentB" -->
      <agent name='AgentA'>
        <!-- optional agent mobility support -->

        <component
          name='mobility'
          class='org.cougaar.core.mobility.ldm.MobilityDomain'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.DomainManager.Domain'>
          <argument>mobility</argument>
        </component>
        <component
          name='org.cougaar.core.mobility.service.RedirectMovePlugin()'
          class='org.cougaar.core.mobility.service.RedirectMovePlugin'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'/>
        <component
          name='org.cougaar.core.mobility.servlet.MoveAgentServlet()'
          class='org.cougaar.core.mobility.servlet.MoveAgentServlet'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'/>


        <!-- optional servlets -->
        <component
          name='org.cougaar.core.wp.WhitePagesServlet(/wp)'
          class='org.cougaar.core.wp.WhitePagesServlet'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
          <argument>/wp</argument>
        </component>
        <component
          name='org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet, /tasks)'
          class='org.cougaar.core.servlet.SimpleServletComponent'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
          <argument>org.cougaar.planning.servlet.PlanViewServlet</argument>
          <argument>/tasks</argument>
        </component>

        <!-- 
        Ping specific plugins.

        See the package javadocs for core/src/org/cougaar/core/mobility/ping
        for important usage notes.
        -->

        <!-- required ping timer, set for every second-->
        <component
          name='org.cougaar.ping.PingTimerPlugin(wakeMillis=1000)'
          class='org.cougaar.ping.PingTimerPlugin'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
          <argument>wakeMillis=1000</argument>
        </component>

        <!--
        Config plugin that defines the pings.

        Creates an endless series of pings from this agent to AgentB,
        sent one per second and statistics reports every 10 seconds
	See the javadocs for additional options.
        -->
        <component
          name='org.cougaar.ping.PingAdderPlugin(target=AgentB, delayMillis=1000)'
          class='org.cougaar.ping.PingAdderPlugin'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
          <argument>target=AgentB</argument>
          <argument>delayMillis=1000</argument>
	  <argument>eventMillis=10000</argument>
        </component>

        <!-- optional "/ping" servlet -->
        <component
          name='org.cougaar.ping.PingServlet(/ping)'
          class='org.cougaar.ping.PingServlet'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
          <argument>/ping</argument>
        </component>


      </agent>
    </node>
    <node name='NodeB'>

      <!-- 
      XMLNode command-line options, ignored for now (bug 3466)

      You may need to copies these "vm_parameter" values into your
      "XMLNode.bat/Node" scripts.
      -->
      <class>org.cougaar.bootstrap.Bootstrapper</class>
      <prog_parameter>org.cougaar.core.node.Node</prog_parameter>
      <!-- make sure these are correct! -->
      <vm_parameter>-Dorg.cougaar.node.name=NodeB</vm_parameter>
      <vm_parameter>-Dorg.cougaar.society.file=MiniPing-2nodes.xml</vm_parameter>
      <vm_parameter>-Dorg.cougaar.name.server=NodeA@localhost:8888</vm_parameter>

      <!-- enable ping logging using system properties instead of "loggingConfig.conf" -->
      <!--
      <vm_parameter>-Dorg.cougaar.core.logging.config.filename=loggingConfig.conf</vm_parameter>
      -->
      <vm_parameter>-Dorg.cougaar.core.logging.log4j.category.EVENT.org.cougaar.ping=DEBUG</vm_parameter>

      <vm_parameter>-Dorg.cougaar.core.logging.log4j.category.org.cougaar.ping=INFO</vm_parameter>
      <!--
      <vm_parameter>-Dorg.cougaar.core.agent.showtraffic=false</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.agent.quiet=true</vm_parameter>
      -->

      <!-- disable planning and communities (bug 2522) -->
      <vm_parameter>-Dorg.cougaar.core.load.planning=false</vm_parameter>
      <vm_parameter>-Dorg.cougaar.planning.ldm.lps.ComplainingLP.level=0</vm_parameter>
      <vm_parameter>-Dorg.cougaar.society.xsl.param.planning=false</vm_parameter>
      <vm_parameter>-Dorg.cougaar.society.xsl.param.communities=false</vm_parameter>

      <!-- Java VM Parameters -->
      <vm_parameter>-XX:ThreadStackSize=256</vm_parameter>
      <vm_parameter>-Xms16m</vm_parameter>
      <vm_parameter>-Xmx128m</vm_parameter>

      <!-- Cougaar Install Path environment-->
      <vm_parameter>-Dorg.cougaar.core.node.InitializationComponent=XML</vm_parameter>
      <!-- config path; Note this directory is part of config-->
      <vm_parameter>-Dorg.cougaar.config.path=$COUGAAR_INSTALL_PATH/ping/configs/ping\;$COUGAAR_INSTALL_PATH/configs/common</vm_parameter>
      <vm_parameter>-Dorg.cougaar.install.path=$COUGAAR_INSTALL_PATH</vm_parameter>
      <vm_parameter>-Dorg.cougaar.workspace=$COUGAAR_INSTALL_PATH/workspace</vm_parameter>
      <vm_parameter>-Dorg.cougaar.system.path=$COUGAAR_INSTALL_PATH/sys</vm_parameter>
      <vm_parameter>-Djava.class.path=$COUGAAR_INSTALL_PATH/lib/bootstrap.jar</vm_parameter>
      <vm_parameter>-Xbootclasspath/p:$COUGAAR_INSTALL_PATH/lib/javaiopatch.jar</vm_parameter>
 
     <!--optional developement jars -->
      <!--
	  <vm_parameter>-Dorg.cougaar.class.path=$COUGAAR_SRC_PATH/core/newcore.jar</vm_parameter>
      -->

      <!-- optional frequent persistence -->
      <!--
      <vm_parameter>-Dorg.cougaar.core.persistence.enable=true</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.persistence.lazyInterval=15000</vm_parameter>
      -->
      <!-- Fast Name Service Startup-->
      <vm_parameter>-Dorg.cougaar.core.wp.server.successTTD=90000</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.wp.server.failTTD=1000</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.wp.resolver.rmi.minLookup=500</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.wp.resolver.rmi.maxLookup=2000</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.mts.destq.retry.initialTimeout=250</vm_parameter>
      <vm_parameter>-Dorg.cougaar.core.mts.destq.retry.maxTimeout=666</vm_parameter>

      <!-- optional Node-level agent mobility support -->

      <component
        name='mobility'
        class='org.cougaar.core.mobility.ldm.MobilityDomain'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.DomainManager.Domain'>
        <argument>mobility</argument>
      </component>
      <component
        name='org.cougaar.core.mobility.service.RootMobilityPlugin()'
        class='org.cougaar.core.mobility.service.RootMobilityPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'/>


      <!-- optional servlets -->
      <component
        name='org.cougaar.core.wp.WhitePagesServlet(/wp)'
        class='org.cougaar.core.wp.WhitePagesServlet'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
        <argument>/wp</argument>
      </component>
      <component
        name='org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet, /tasks)'
        class='org.cougaar.core.servlet.SimpleServletComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
        <argument>org.cougaar.planning.servlet.PlanViewServlet</argument>
        <argument>/tasks</argument>
      </component>

      <!-- optional  Metrics Service components -->
      <!-- Metrics Sensors -->
      <component
        name='org.cougaar.mts.std.StatisticsAspect()'
        class='org.cougaar.mts.std.StatisticsAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          140
        </order>
      </component>
      <component
        name='org.cougaar.mts.std.AgentFlowAspect()'
        class='org.cougaar.mts.std.AgentFlowAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          210
        </order>
      </component>
      <component
        name='org.cougaar.mts.std.StatisticsPlugin'
        class='org.cougaar.mts.std.StatisticsPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.metrics.AgentFlowRatePlugin'
        class='org.cougaar.core.qos.metrics.AgentFlowRatePlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.thread.AgentLoadRatePlugin'
        class='org.cougaar.core.thread.AgentLoadRatePlugin'
        priority='LOW'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.metrics.AgentStatusRatePlugin'
        class='org.cougaar.core.qos.metrics.AgentStatusRatePlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.metrics.MetricsServletPlugin'
        class='org.cougaar.core.qos.metrics.MetricsServletPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.thread.AgentLoadSensorPlugin'
        class='org.cougaar.core.thread.AgentLoadSensorPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.GossipAspect()'
        class='org.cougaar.core.qos.gossip.GossipAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          230
        </order>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.GossipStatisticsServiceAspect()'
        class='org.cougaar.core.qos.gossip.GossipStatisticsServiceAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          240
        </order>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.SimpleGossipQualifierComponent()'
        class='org.cougaar.core.qos.gossip.SimpleGossipQualifierComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          250
        </order>
      </component>
      <component
        name='org.cougaar.core.qos.gossip.GossipStatisticsPlugin'
        class='org.cougaar.core.qos.gossip.GossipStatisticsPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <!-- MTS Assertions -->
      <component
        name='org.cougaar.mts.std.DeliveryVerificationAspect(info-time=9,warn-time=99)'
        class='org.cougaar.mts.std.DeliveryVerificationAspect'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MessageTransport.Aspect'>
        <order>
          220
        </order>
        <argument>
          info-time=9
        </argument>
        <argument>
          warn-time=99
        </argument>
      </component>
      <component
        name='org.cougaar.core.thread.TopPlugin'
        class='org.cougaar.core.thread.TopPlugin'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
      </component>
      <!-- Metric Service Internals  -->
      <component
        name='org.cougaar.core.qos.rss.AgentHostUpdaterComponent()'
        class='org.cougaar.core.qos.rss.AgentHostUpdaterComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      </component>
      <component
        name='org.cougaar.lib.mquo.SyscondFactory()'
        class='org.cougaar.lib.mquo.SyscondFactory'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      </component>
      <!-- optional Metric Service Feeds  -->
      <component
        name='org.cougaar.core.qos.gossip.GossipFeedComponent()'
        class='org.cougaar.core.qos.gossip.GossipFeedComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
      </component>
      <component
        name='org.cougaar.core.qos.rss.ConfigFinderDataFeedComponent(name=sites,url=cougaarconfig:RSS-Sites.conf)'
        class='org.cougaar.core.qos.rss.ConfigFinderDataFeedComponent'
        priority='COMPONENT'
        insertionpoint='Node.AgentManager.Agent.MetricsServices.Component'>
        <argument>
          name=sites
        </argument>
        <argument>
          url=cougaarconfig:RSS-Sites.conf
        </argument>
      </component>

      <!-- End of Metrics Service components -->

      <!--
      "AgentB", which receives pings from "AgentA".

      To make run a multi-node test, copy the "<node ..>..</node>" information
      from above and create a second node.
      -->
      <agent name='AgentB' >
        <!-- optional agent mobility support -->
        <component
          name='mobility'
          class='org.cougaar.core.mobility.ldm.MobilityDomain'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.DomainManager.Domain'>
          <argument>mobility</argument>
        </component>
        <component
          name='org.cougaar.core.mobility.service.RedirectMovePlugin()'
          class='org.cougaar.core.mobility.service.RedirectMovePlugin'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'/>
        <component
          name='org.cougaar.core.mobility.servlet.MoveAgentServlet()'
          class='org.cougaar.core.mobility.servlet.MoveAgentServlet'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'/>

        <!-- optional servlets -->
        <component
          name='org.cougaar.core.wp.WhitePagesServlet(/wp)'
          class='org.cougaar.core.wp.WhitePagesServlet'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
          <argument>/wp</argument>
        </component>
        <component
          name='org.cougaar.core.servlet.SimpleServletComponent(org.cougaar.planning.servlet.PlanViewServlet, /tasks)'
          class='org.cougaar.core.servlet.SimpleServletComponent'
          priority='COMPONENT'
          insertionpoint='Node.AgentManager.Agent.PluginManager.Plugin'>
          <argument>org.cougaar.planning.servlet.PlanViewServlet</argument>
          <argument>/tasks</argument>
        </component>

        <!-- no ping plugins needed on the target agent -->
      </agent>
    </node>

  </host>
</society>
