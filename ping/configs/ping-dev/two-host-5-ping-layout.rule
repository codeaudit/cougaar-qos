#############
# Convert from a single Node and Host to
#   Agent1 -> Node1 -> Host1
#   Agent2 -> Node2 -> Host2
# Also mark Host 1 as the base name server
# Mark Host 1 as part of the a single "REAR" enclave
# Mark Host 2 as part of the a single "FWD" enclave
# And creates a enclave robustness (AR) Manager

# already have 'HOST1'
society.add_host('HOST2')

# HOST1 already contains NODE1
society.hosts['HOST2'].add_node('NODE2')

# NODE1 already contains Sources
society.agents['Sink1'].move_to('NODE2')
society.agents['Sink2'].move_to('NODE2')
society.agents['Sink3'].move_to('NODE2')
society.agents['Sink4'].move_to('NODE2')
society.agents['Sink5'].move_to('NODE2')


# Make Enclaves with Manager
# add new host for Manager Agent
#society.add_host('HOST2')
society.hosts['HOST1'].add_node('REAR-MGMT-NODE')
society.nodes['REAR-MGMT-NODE'].add_agent('REAR-ARManager')

society.hosts['HOST2'].add_node('FWD-MGMT-NODE')
society.nodes['FWD-MGMT-NODE'].add_agent('FWD-ARManager')


# put all hosts in FWD
#society.each_host do |host|
#  host.add_facet({'enclave' => 'FWD'}) unless host.name == "HOST1"
#end
# Split hosts into different Enclaves
society.hosts['HOST1'].add_facet({'enclave' => 'REAR'}) 
society.hosts['HOST2'].add_facet({'enclave' => 'FWD'}) 

# make HOST2 the name server
society.nodes['FWD-MGMT-NODE'].add_agent('FWD-NameServer')
society.agents['FWD-NameServer'].add_facet({'role' => 'NameServer'})
