##############
# One agent with multiple pingers

def addPinger(source, dest, pinger, args)
  srcAgent = society.agents[source]
  if !srcAgent
    srcAgent = society.nodes['NODE1'].add_agent(source)
  end
  destAgent = society.agents[dest]
  if !destAgent
    destAgent = society.nodes['NODE1'].add_agent(dest)
  end
  srcAgent.add_component do |c|
    c.classname = "org.cougaar.ca.artifacts.PingArtifactPlugin"
  end
  srcAgent.add_component do |c|
    c.classname = "org.cougaar.ca.players.PingAdderPluginCA"
    c.add_argument("target=#{dest}")
    args.each_pair {|key, value|
      c.add_argument("#{key}=#{value}")
    }
    c.add_argument("pinger=#{pinger}")
  end
end 

def addDefaultPinger(agentNumber, pingerNumber)
    # send ping from Source<agentNumber> to Sink<agentNumber>
    # eventMillis is interval beteen statistics events being logged
  addPinger("Source#{agentNumber}", "Sink#{agentNumber}", pingerNumber,
	  {'eventMillis' => '10000',
	    'delayMillis' => '0',
	    # Define Ping Size in bytes, 
	    #'sendFillerSize' => '50000',
	    # false means extra bytes will be compressable 
	    #'sendFillerRand' => 'false',
	    #'echoFillerSize' => '50000',
	    #'echoFillerRand' => 'false',
	  })
end

def managePings(wake_time,pinger)
  puts "adding coord-art"
  society.each_agent(true) do |agent|
    agent.add_component do |c|
	c.classname="org.cougaar.core.qos.ca.CoordinationArtifactBrokerPlugin"
	c.order = 600;    
    end  
    agent.add_component do |c|
      c.classname = "org.cougaar.ca.artifacts.PingArtifactPlugin"
    end
    agent.add_component do |c|
      c.classname = "org.cougaar.ca.players.JessPlugin"
      c.add_argument("JessFiles=PingTarget.clp")
    end
  end
end

def addFalseSubscriber(source, subscriberNumber)
  srcAgent = society.agents[source]
  if !srcAgent
    srcAgent = society.nodes['NODE1'].add_agent(source)
  end
  srcAgent.add_component do |c|
    c.classname = "org.cougaar.ping.PingFalseSubscriberPlugin"
    c.add_argument("subscriber=#{subscriberNumber}")
  end
end 

def addExtraSubscriber(source, subscriberNumber)
  srcAgent = society.agents[source]
  if !srcAgent
    srcAgent = society.nodes['NODE1'].add_agent(source)
  end
  srcAgent.add_component do |c|
    c.classname = "org.cougaar.ping.PingExtraSubscriberPlugin"
    c.add_argument("subscriber=#{subscriberNumber}")
  end
end 

def addSubscriber(agentNumber, falseSubscriberNumber,extraSubscriberNumber)
    # Add subscribers to  Source<agentNumber> 
  if (falseSubscriberNumber > 0) then
    addFalseSubscriber("Source#{agentNumber}", falseSubscriberNumber)
  end
  if (extraSubscriberNumber > 0) then
    addExtraSubscriber("Source#{agentNumber}", extraSubscriberNumber)
  end
end

society.add_host('HOST1') do |host|
  host.add_node('NODE1') do |node|
  end
end

#add pingers
for i in 1..1 do
  addDefaultPinger(i,1) # (agent, pinger)
#  addDefaultPinger(1,i)
end

# add ping managers to all agents that send pings
# wake once every second to check ping timeouts
managePings(1000,1)

# add subscribers
for i in 1..1 do
 #addSubscriber(1,0,i) #agent, falseSub#, extraSub#
end
=begin
=end


